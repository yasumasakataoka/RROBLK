<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xml:lang="ja" xmlns="http://www.w3.org/1999/xhtml" lang="ja"><head> 
 
   
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"> 
    <meta http-equiv="content-style-type" content="text/css"> 
    <title>Rails3 で新規プロジェクトを作成する :: marugoshi.org</title>
    <link href="Rails3%20%E3%81%A7%E6%96%B0%E8%A6%8F%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%20%20%20marugoshi.org_files/styles.css" media="screen" rel="stylesheet" type="text/css">
  </head><body>
    <div id="whole">
      <div id="header">
        <h1><a href="http://www.marugoshi.org/">www.marugoshi.org</a></h1>
      </div>
      <div id="main">
        <div id="contents">
          
  <div class="entry">
    <h2><a href="http://www.marugoshi.org/roma-was-not-built-in-a-day/2010/09/18/create-new-project-with-rails3/">Rails3 で新規プロジェクトを作成する</a></h2>
    <h3>Saturday, September 18, 2010</h3>
    <p>さて、環境も整ってきたので Rails3 によるプロジェクトを作成する。<br>
ログもかねて、どんな風に変わったのか、ちょっと丁寧に残していくことにする。</p>
<p>新規のプロジェクト作成に関して一番大きいのはやはり Bundler 。Rails だけに特化したものではないけれど、Rails 
本体はもちろん、プラグインも依存関係が多く悩まされることが多い Rails 
のプロジェクトにおいては、非常に便利なツール。実際に使ってみると、こんな感じ。</p>
<p>まずは、プロジェクトのルートとなるディレクトリを、rails new を使う前に先に作る。そこで、Bundler の設定ファイルである Gemfile を作成する。ここではプロジェクト名を hogehoge とする。</p>
<pre>$ pwd
/var/www
$ mkdir hogehoge
$ cd hogehoge
$ touch Gemfile
</pre>
<p>Gemfile には、必要となる gem の情報を書いていく。Rails のプロジェクトを作るわけだから、当然 Rails の gem が必要になる。こんな感じで書く。</p>
<pre>source 'http://rubygems.org'
gem "rails", "&gt;=3.0.0"
</pre>
<p>Gemfile が置いてあるディレクトリで、以下のコマンドを実行する。</p>
<pre>$ bundle install
</pre>
<p>すると、Gemfile に書いた必要な gem がインストールされていなければ、依存している gem を含めてインストールをしてくれる。上記は、rubygems から 3 以降で最新の Rails をインストールするように書いてある。</p>
<p>これでシステムには Rails の最新版が入ったことになる。また、このコマンドを打ったことで、Gemfile.lock 
が作成される。開いてみるとわかるけれど、Rails 
の依存ライブラリがバージョンも含めてここに書かれることになる。これは、このアプリケーションはここに書かれている gem 
のみを使うという宣言（もしくは強制）で、Rails の場合、例えばここに存在しない gem を require 
しようとするとできないようになっている。パスが通っていても読み込めないようにするのはおそらく Bundler 側で、Rails 側は 
Gemfile.lock がある時点で、読み込みまで含めた gem の管理を Bundler 
に委譲して実現してるんだろうと思う。書いてておれもよくわからん。</p>
<p>ソース触る人が複数人いてある開発者のローカルでは動くのに他の環境では動かないだとか、ローカル環境と本番環境で微妙な差異が出てしまっているだ
とか、そういった問題が gem 
のバージョンに依存した問題であれば、かなり有効な解決方法かなと思う。依存の解消にどれくらい頭を使ってくれるかはわからない。環境に差異が出てしまう
のって、ImageMagick のバージョンだとか、後述する libxslt 周りだとか、gem 
とは違うところに起因する問題が起きるケースの方が多い気がするけどね。</p>
<p>Bundler が rails3 をインストールしてくれているはずなので、試しに rails コマンドの help を表示してみる。</p>
<pre>$ rails --help
Usage:
  rails new APP_PATH [options]

Options:
  -r, [--ruby=PATH]           # Path to the Ruby binary of your choice
                              # Default: RVM 使ってるのでそのパスが出る
  -d, [--database=DATABASE]   # Preconfigure for selected database (options: mysql/oracle/postgresql/sqlite3/frontbase/ibm_db)
                              # Default: sqlite3
  -b, [--builder=BUILDER]     # Path to an application builder (can be a filesystem path or URL)
  -m, [--template=TEMPLATE]   # Path to an application template (can be a filesystem path or URL)
      [--dev]                 # Setup the application with Gemfile pointing to your Rails checkout
      [--edge]                # Setup the application with Gemfile pointing to Rails repository
      [--skip-gemfile]        # Don't create a Gemfile
  -O, [--skip-active-record]  # Skip Active Record files
  -T, [--skip-test-unit]      # Skip Test::Unit files
  -J, [--skip-prototype]      # Skip Prototype files
  -G, [--skip-git]            # Skip Git ignores and keeps

Runtime options:
  -f, [--force]    # Overwrite files that already exist
  -p, [--pretend]  # Run but do not make any changes
  -q, [--quiet]    # Supress status output
  -s, [--skip]     # Skip files that already exist

Rails options:
  -v, [--version]  # Show Rails version number and quit
  -h, [--help]     # Show this help message and quit

Description:
    The 'rails new' command creates a new Rails application with a default
    directory structure and configuration at the path you specify.

Example:
    rails new ~/Code/Ruby/weblog

    This generates a skeletal Rails installation in ~/Code/Ruby/weblog.
    See the README in the newly created application to get going.
</pre>
<p>dev とか edge て前からあったけ？　違いがよくわからない。TestUnit 、ActiveRecord 、Prototype 
を外せるようになっていたり、デフォルトで git を使うようになっていたり、ユーザのニーズにあわせた変更が行われているのがわかる。Rail 
がひいてあるにしても、これくらいの選択肢はあってもいいよね。</p>
<p>ようやっと、実際にプロジェクトを作ってみる。ここでは bundle を通して新規のプロジェクトを作成する。こうすることで、bundler で指定している Rails を指定して new してくれる。んだと思う。</p>
<pre>$ bundle exec rails new . --database=mysql --skip-test-unit --skip-prototype
       exist  
      create  README
      create  Rakefile
      create  config.ru
      create  .gitignore
    conflict  Gemfile
Overwrite /var/www/hogehoge/Gemfile? (enter "h" for help) [Ynaqdh]
       force  Gemfile
      create  app
      create  app/views/layouts/application.html.erb
      create  app/helpers/application_helper.rb
      create  app/controllers/application_controller.rb
      create  app/models
      create  app/mailers
      create  config
      create  config/routes.rb
      create  config/application.rb
      create  config/environment.rb
      create  config/environments
      create  config/environments/production.rb
      create  config/environments/test.rb
      create  config/environments/development.rb
      create  config/initializers
      create  config/initializers/secret_token.rb
      create  config/initializers/inflections.rb
      create  config/initializers/backtrace_silencers.rb
      create  config/initializers/mime_types.rb
      create  config/initializers/session_store.rb
      create  config/locales
      create  config/locales/en.yml
      create  config/boot.rb
      create  config/database.yml
      create  db
      create  db/seeds.rb
      create  doc
      create  doc/README_FOR_APP
      create  lib
      create  lib/tasks
      create  lib/tasks/.gitkeep
      create  log
      create  log/server.log
      create  log/production.log
      create  log/development.log
      create  log/test.log
      create  public
      create  public/422.html
      create  public/500.html
      create  public/404.html
      create  public/index.html
      create  public/favicon.ico
      create  public/robots.txt
      create  public/images
      create  public/images/rails.png
      create  public/stylesheets
      create  public/stylesheets/.gitkeep
      create  public/javascripts
      create  public/javascripts/.gitkeep
      create  public/javascripts/application.js
      create  script
      create  script/rails
      create  tmp
      create  tmp/sessions
      create  tmp/sockets
      create  tmp/cache
      create  tmp/pids
      create  vendor/plugins
      create  vendor/plugins/.gitkeep
</pre>
<p>ほむ。構成はそれほど変わっていない。Gemfile を上書きしてくるか聞いてくるので、上書きする。<br>
上書きされた Gemfile を見ると、Rails は 3.0.0 
を決めうちで使うようになっている。他には、コメントアウトしてあるけど、ウェブサーバとして unicorn が書かれていたり。ほー。もはや時代は 
Passenger から unicorn ですかそうですか。</p>
<pre>source 'http://rubygems.org'

gem 'rails', '3.0.0'

# Bundle edge Rails instead:
# gem 'rails', :git =&gt; 'git://github.com/rails/rails.git'

gem 'mysql2'

# Use unicorn as the web server
# gem 'unicorn'

# Deploy with Capistrano
# gem 'capistrano'

# To use debugger
# gem 'ruby-debug'

# Bundle the extra gems:
# gem 'bj'
# gem 'nokogiri'
# gem 'sqlite3-ruby', :require =&gt; 'sqlite3'
# gem 'aws-s3', :require =&gt; 'aws/s3'

# Bundle gems for the local environment. Make sure to
# put test-only gems in this group so their generators
# and rake tasks are available in development mode:
# group :development, :test do
#   gem 'webrat'
# end
</pre>
<p>ざっと見ただけで、何となく書き方は把握できる。実際に、自分で必要になるものを書いてみる。</p>
<pre>source 'http://rubygems.org'

gem 'rails', '3.0.0'
gem 'mysql2'
gem 'unicorn'
gem 'capistrano'
gem 'rails3-generators'
gem 'jquery-rails'
gem 'factory_girl_rails'

group :development, :test do
  gem 'rspec-rails', '&gt;=2.0.0.beta.22'
  gem 'webrat'
  gem 'capybara'
end
</pre>
<p>mysql2 に関してはデフォルトで書いてあるくらいだからこれ推奨なんだろうってことでそのまま。unicorn 
は興味があるので使ってみる。rails3-generators は評判がよいので。jquery-rails は 
rails3-generators から分離してフォークされたプロジェクトのよう。RSpec に関しては <a href="http://github.com/rspec/rspec-rails">公式ドキュメント</a> にある通りに書いてみた。beta.22 ってすごいよね。factory_girl_rails も使ってみたいだけ。webrat と capybara も同様。いやいや、ちゃんとテストから書きますってば。</p>
<p>書き直した時点で、また bundle コマンドでインストール。失敗。capybara が依存している nokogiri が入らなかったので、必要なものを入れる。</p>
<pre>$ sudo aptitude install libxslt-dev libxml2-dev
$ bundle install
</pre>
<p>と、いうことでとりあえず新規の作成はここまで。長い！　ぐへえ。この後、rails3-generators の設定について書く。いつになったらアプリの話まで行けるのか…。最後に、git サーバにコミットしてとりあえず寝ます。</p>
<pre>$ git add .
$ git commit -m 'Add files after command `bundle exec rails new .`'
$ git push origin master
</pre>
<p>おやすみなさい。</p>
    <iframe title="Twitter For Websites: Tweet Button" style="width: 110px; height: 20px;" src="Rails3%20%E3%81%A7%E6%96%B0%E8%A6%8F%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%20%20%20marugoshi.org_files/tweet_button.htm" allowtransparency="true" tabindex="0" class="twitter-share-button twitter-count-horizontal" frameborder="0" scrolling="no"></iframe><script src="Rails3%20%E3%81%A7%E6%96%B0%E8%A6%8F%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%20%20%20marugoshi.org_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript" src="Rails3%20%E3%81%A7%E6%96%B0%E8%A6%8F%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%20%20%20marugoshi.org_files/widgets.js"></script>
  </div>

        </div>
        <div id="navigation">
          <ul>
            <li id="first"><a href="http://www.marugoshi.org/feed">Feed</a></li>
            <li><a href="http://www.google.com/profiles/marugoshi.org">Profile</a></li>
            <li><a href="http://www.twitter.com/marugoshi">Twitter</a></li>
            <li><a href="http://www.github.com/marugoshi">Github</a></li>
            <li><a href="http://www.flickr.com/photos/marugoshi/">Flickr</a></li>
            <li><a href="http://pinboard.in/u:marugoshi">Pinboard</a></li>
            <li><a href="http://www.facebook.com/marugoshi">Facebook</a></li>
            <li><a href="http://www.lastfm.jp/user/marugoshi">Last.fm</a></li>
            <li><a href="http://marugoshi.tumblr.com/">Tumblr</a></li>
          </ul>
        </div>
      </div>
    </div>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5536868-7']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
  </body></html>