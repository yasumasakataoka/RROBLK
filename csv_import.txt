require 'fileutils'
require 'iconv'

tmp = params[:uploadform][:file].tempfile
file = File.join("public", params[:uploadform][:file].original_filename)
FileUtils.cp tmp.path, file

oo = Excel.new(file)

rooparse(oo)
FileUtils.rm file

http://rakkyoo.net/?p=904
 インストールはgem経由で簡単．

1

	

$ sudo gem1.9 install roo

これだけです．
test.xlsxを読み込む使い方は，

1
2

	

require 'roo'
spst = Excelx.new("test.xlsx")

もしくは，

1
2

	

require 'roo'
spst = Roo::Spreadsheet.open("test.xlsx")

とするだけです．
A1の値を参照するときは，

1

	

spst.cell(1,1)

っとすればできます．
このライブラリでは，「1」から始まるみたいですね．
ワークシートへの選択は第三引数を指定すればいいだけみたいで，
「Sheet 1」のA1を参照するときは，

1

	

spst.cell(1, 1, 'Sheet 1')


http://openrails.blogspot.jp/2011/06/xls-import-using-spreadsheet.html
 xls import using Spreadsheet
Step1. install the required spreadsheet gem by entering:

$ sudo gem install spreadsheet

step2: in the view place the form to be submitted to
a specific action.

<% form_for :dump, :url=>{:controller=>"students",
:action=>"excel_import"}, :html => { :multipart => true } do |f| -%>
Select an Excel File :
<%= f.file_field :excel_file -%>
<%= submit_tag 'Submit' -%>
<% end -%>

step3: In the controller action:

require 'spreadsheet'

def excel_import
Spreadsheet.client_encoding = 'UTF-8'
book = Spreadsheet.open params[:dump][:excel_file]
sheet1 = book.worksheet 0
sheet1.each do |row|
# you can do any interesing thing with row
Student.new(:first_name => row[0], :last_name => row[1]).save
end
end



http://murajun1978-pg.blogspot.jp/2012/09/rails-csv.html

 Rails CSVインポート
(￣(ｴ)￣)彡☆

まずViewでCSVファイルをアップロード出来るようにする
file_field_tagを使うー

<%= form_tag files_path, :multipart => true do %>
  ファイルを選択して下さい:（*.csv）
  <%= file_field_tag 'upload_file' %>
  <%= submit_tag "アップロード", :confirm => "ほんまにアップロードする？" %>
<% end %>


コントローラはこんな感じかな？

def create
  require 'csv'

  if params[:upload_file].blank? == false
    reader = params[:upload_file].read

    CSV.parse(reader) do |row|
      file = File.new
      file["field_name"] = row[0]
      file.save
    end
  end
end

